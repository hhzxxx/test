<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qxt.bysj.dao.TagMapper">
  <resultMap id="BaseResultMap" type="com.qxt.bysj.domain.Tag">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="tagname" jdbcType="VARCHAR" property="tagname" />
    <result column="hot" jdbcType="INTEGER" property="hot" />
  </resultMap>
  <sql id="Base_Column_List">
    id, tagname, hot
  </sql>
    <select id="findRankTag"  resultMap="BaseResultMap">
SELECT
	DISTINCT x.id,x.tagname,x.hot
FROM
	(
		(
			SELECT
				t.tagId AS id,
				p.tagname,
				p.hot
			FROM
            <if test="objType eq 1">
                tab_tagxvideo t
            </if>
            <if test="objType eq 2">
                tab_tagxarticle t
            </if>
			LEFT JOIN tab_tag p ON p.id = t.tagId
			GROUP BY
				t.tagId
			ORDER BY
				p.hot DESC
			LIMIT 10
		)
		UNION
		(
			SELECT
				t.tagId AS id,
				p.tagname,
				p.hot
			FROM
                <if test="objType eq 1">
                    tab_tagxvideo t
                </if>
                <if test="objType eq 2">
                    tab_tagxarticle t
                </if>
			LEFT JOIN tab_tag p ON p.id = t.tagId
			GROUP BY
				t.tagId
			ORDER BY
				RAND()
			LIMIT 20
		)
	) x
    </select>

    <select id="find"  resultMap="BaseResultMap">
        select
        u.*
        from tab_tag u
        <if test="video!= null and video!=''">
        RIGHT JOIN tab_tagxvideo r on u.id=r.tagId
        </if>
        <if test="article!= null and article!=''">
            RIGHT JOIN tab_tagxarticle r on u.id=r.tagId
        </if>
        <if test="type eq 1">
            RIGHT JOIN tab_tagxvideo r on u.id=r.tagId
        </if>
        <if test="type eq 2">
            RIGHT JOIN tab_tagxarticle r on u.id=r.tagId
        </if>
        <where>
            <if test="videoId!= null and videoId!=''">
                AND r.videoId = #{videoId}
            </if>
            <if test="articleId!= null and articleId!=''">
                AND r.articleId = #{articleId}
            </if>
            <if test="type eq 1">
                AND r.videoId = #{videoId}
            </if>
            <if test="type eq 2">
                AND r.articleId = #{articleId}
            </if>
            <if test="id!= null and id!=''">
                AND u.id = #{id}
            </if>
            <if test="tagname!= null and tagname!=''">
                AND u.tagname = #{tagname}
            </if>
        </where>
    </select>

    <select id="findPage"  resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from tab_tag
    </select>

    <select id="selectByTagname" resultMap="BaseResultMap" parameterType="java.lang.String" >
        select
        <include refid="Base_Column_List" />
        from tab_tag
        where tagname = #{tagname,jdbcType=INTEGER}
    </select>
    <select id="firstTagChoose" resultMap="BaseResultMap">
SELECT
	x.*
FROM
	(
		(
			SELECT
				t.tagId AS id,
				p.tagname,
				p.hot
			FROM
				tab_tagXvideo t
			LEFT JOIN tab_tag p ON p.id = t.tagId
			GROUP BY
				t.tagId
			ORDER BY
				p.hot DESC,
				count(t.videoId) DESC
			LIMIT 15
		)
		UNION
			(
				SELECT
					p.id ,
					p.tagname,
					p.hot
				FROM
				tab_tag p
				ORDER BY
					RAND()
				LIMIT 5
			)
		UNION
		(
			SELECT
				t.tagId AS id,
				p.tagname,
				p.hot
			FROM
				tab_tagxarticle t
			LEFT JOIN tab_tag p ON p.id = t.tagId
			GROUP BY
				t.tagId
			ORDER BY
				p.hot DESC,
				count(t.articleId) DESC
			LIMIT 15
		)
	) x
ORDER BY
	RAND()
    </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tab_tag
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tab_tag
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.qxt.bysj.domain.Tag">
    insert into tab_tag (id, tagname, hot
      )
    values (#{id,jdbcType=INTEGER}, #{tagname,jdbcType=VARCHAR}, #{hot,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qxt.bysj.domain.Tag">
    insert into tab_tag
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="tagname != null">
        tagname,
      </if>
      <if test="hot != null">
        hot,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="tagname != null">
        #{tagname,jdbcType=VARCHAR},
      </if>
      <if test="hot != null">
        #{hot,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qxt.bysj.domain.Tag">
    update tab_tag
    <set>
      <if test="tagname != null">
        tagname = #{tagname,jdbcType=VARCHAR},
      </if>
      <if test="hot != null">
        hot = #{hot,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qxt.bysj.domain.Tag">
    update tab_tag
    set tagname = #{tagname,jdbcType=VARCHAR},
      hot = #{hot,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>